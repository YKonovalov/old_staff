unit univer;
interface
uses dos,crt,graph;
type typt=record
        n:byte;
        p:array[1..2,1..50]of byte;
        end;
     typtex=array[0..255]of typt;

     zamstrtype=record
      x1,y1,x2,y2:word;
       { координаты окна вывода строки }
      s:string;
       { выводимая строка }
      nv,kv:byte;
       { начало и конец выделенной части строки }
      nomerkurs:byte;
       { место курсора }
      typkurs:byte;
       { тип курсора: 0 - нет курсора }
       {              1 - полный прямоугольник }
       {              2 - горизонтальный снизу }
       {              3 - вертикальный справа }
       {              4 - вертикальный слева }
       {              5 - уголок правый }
       {              6 - уголок левый }
      cf,cb:byte;
       { Основные цвета }
      cfv,cbv:byte;
       { Выделенные цвета }
      cfc,cfb:byte;
       { Цвета курсора }
      end;

     menutype=record
        regim:byte;
         {определяет один из режимов работы процедуры:}
         { 0 - ничего не делать }
         { 1 - коментарий }
         { 2 - сложный коментарий (простая помощь) }
         { 3 - коментарий и нижнее меню (сложная помощь) }
         { 4 - редатор строки с подготовленными примерами }
         { 5 - редактор нижнего поля без изменения количества строк }
         { 6 - полный редактор нижнего поля }
        xmouse,ymouse:word;
         { относительные координаты мышки }
        xmenu,ymenu:integer;
         { положение суперменю на экране }
        vyravx,vyravy:byte;
         { способ выравнивания положения }
        vizion:pointer;
         { указатель на место хранения изображения если оно сохранено }
        noumemori:boolean;
         { изображение не сохранено из-за нехватки памети }
        zap:boolean;
         { запоминать ли изображение при входе }
        vidzap:byte;
         { как запоминать изображение : }
         { 0 - если возможно }
         { 1 - обезательно в памяти иначе выход с ошибкой }
         { 2 - обезательно везде даже на диске иначе выход }
        stav:boolean;
         { возвращать ли изображение при выходе }
        bild:boolean;
         { производить ли построение рисунка при входе }
        okno:boolean;
         { находимся ли мы в окне меню (иначе в строке) }
        insert:boolean;
         { включен ли режим вставки }
        a:array[1..10]of string[10];
         { массив со строками команд выхода }
        va:array[1..10]of byte;
         { какие буквы строк команд выхода активны (ALT- ) и подкрашены }
        na:byte;
         { количество команд выхода }
        b:array[1..20]of string[31];
         { массив строк коментария }
        nb:byte;
         { количество строк коментария }
        d:array[1..30]of string[31];
         { массив строк меню }
        nd:byte;
         { все количество строк меню }
        hd:byte;
         { количество строк меню видимые в окне }
        upr:array[1..20,1..2]of byte;
         { (*.1)- начало подкрашенной изменяемой области }
         { (*.2)- конец подкрашенной изменяемой области }
         { если конец менише начала то строка не командная }
        stroka:string;
         { строчка для ручного ввода }
        ks:byte;
         { в каком месте курсор в строчке }
        otvet:string;
         { строка возвращаемая процедурой }
        numerend:byte;
         { номер окончания процедуры: }
         { 0 - нажат ESC }
         { 1..10 - выход через команду выхода }
         { 101..120 - выбор пункта меню (1..20)}
        km:byte;
         { в каком месте курсор в окне меню }
        nvs:byte;
         { номер верхней строки в окне меню }
              {+++++++++++++++++++++++++++++}
              {++ цветовые характеристики ++}
              {+++++++++++++++++++++++++++++}
        clobv,flobv,cfobv,ffobv:byte;
         { обводка }
        clkomand,flkomand,cfkomand,ffkomand:byte;
         { команды выхода }
        clkoment,flkoment,cfkoment,ffkoment:byte;
         { коментарий }
        clstroki,flstroki,cfstroki,ffstroki,cfastroki,ffastroki:byte;
         { строчка редактирования }
        cfkurs,ffkurs,cfakurs,ffakurs:byte;
         { курсор }
        clokna,flokna,cfokna,ffokna,cfaokna,ffaokna:byte;
         { окно меню }
        cfmask,ffmask,cfamask,ffamask:byte;
         { маска }
        clpoz,flpoz,cfpoz,ffpoz:byte;
         { показыватель позиции окна в массиве меню }
        clpov,flpov,cfpov,ffpov:byte;
         { поводок }
        cltreug,fltreug,cftreug,fftreug:byte;
         { треугольнички }
        cllug,fllug,cflug,fflug:byte;
         { лужайка для поводка }
                  {++++++ текстовые характеристики +++++}
        ctkomand,ctakomand,ftkomand,ftakomand:byte;
        ctkomemt,ftkomemt:byte;
        ctstroki,ctastroki,ctkstroki,ctkastroki,ftstroki,ftastroki,ftkstroki,ftkastroki:byte;
        ctokna,ctaokna,ctmokna,ctmaokna,ftokna,ftaokna,ftmokna,ftmaokna:byte;
        end;

VAR reg:registers;
    tex:^typtex;
     { Массив для спец шрифта }
    dxmousehran,dymousehran:integer;
     { Места для накопления значений смешения мыши не использованные }
     { процедурой READKEYMOUS }
    nomouse:boolean;
     { В момент инициализации мышь не обнаружена }
    alt,ctrl:boolean;
    gx,gy:word;

{-----------------------------------------------------------------}

PROCEDURE INITMOUSE;
 { Инициализирует мышку }
 { если она работает то переменной NOMAUSE  присваивается TRUE }
PROCEDURE ABOUTMOUSE(var dx,dy:integer; var n:byte);
 { Возвращает относительное смещение мышки за время с предыдущего }
 { обращения и номер нажатой клавиши мышки в момент обращения  }
PROCEDURE READKEYMOUS(cler:boolean;var r1,r2:char;
                      var dx,dy:integer; var n:byte);
 { Сервисная процедура циклического опроса клавиатуры. }
 { CLER - очищать ли буфер клавиатуры в момент входа }
 { R1 - код нажатой клавиши клавиатуры }
 { R2 - расширенный код клавипши если R1=#0 }
 { DX,DY - относительное смещение мышки за время с предыдущего обрашения }
 { N - номер нажатой клавиши мышки в момент обращения, }
 { если нажатие двойное то к номеру прибавлено 2 }
FUNCTION MOUSEPRESSED:boolean;
 { Отвечает да если за втремя с предыдущего обращения мышь сместилась }
 { или в момент обрашения нажата ее клавиша }
PROCEDURE STRPLUS(var s:string; n:byte);
 { добавляет строку пробелами справа до указанного значения }
PROCEDURE POSTTEXT(x,y,lx,ly:word; k,c,orbuk:byte);
 { X,Y - координаты верхнего левого угла выводимого символа }
 { LX,LY - ширина и высота символа }
 { K - код символа }
 { C - цвет символа }
 { ORBUK - ориентация символа: (*****1** - негативность) }
 {                             (******00 - вверх       ) }
 {                             (******01 - вправо      ) }
 {                             (******10 - вниз        ) }
 {                             (******11 - влево       ) }
PROCEDURE INITTEXT;
 { Инициализация дальнейшей работы со спец шрифтом }
 { Содержит полное описание всех шрифтов           }
PROCEDURE ZAMSTR(x1,y1,x2,y2:longint; sh,st:string; cf,ct,orbuk,f:byte);
 { Сервисная процедура для вывода строки символов в окно }
 { или замены одной строки на другую с минимизацией перерисовывания }
PROCEDURE SETBUK(x1,y1,x2,y2:word; long,plase,color,buk:byte);
PROCEDURE SETPREM(x1,y1,x2,y2:word; long,plase,color:byte);
PROCEDURE SETKURS(x1,y1,x2,y2:word; long,plase,buk,cb,cf,tip:byte);
PROCEDURE ZAMSTR2(old,new:zamstrtype);
PROCEDURE SMENU(var m:menutype);
 { Процедура полного интерфейса с пользователем }
{=================================================================}
implementation
{=================================================================}

Procedure InitMouse;
 Begin
  Reg.AX:=0;
  Intr($33,Reg);
 If Reg.AX=0 Then nomouse:=true else nomouse:=false;
End;

{---------------------------------------------------------}

procedure aboutmouse(var dx,dy:integer; var n:byte);
 begin(*aboutmouse*)
  n:=0;
  if nomouse then
   begin
   dx:=0;
   dy:=0;
   exit
   end;
  reg.ax:=3;
  intr($33,reg);
  if (reg.bx and 1)>0 then n:=1;
  if (reg.bx and 2)>0 then n:=2;
  reg.ax:=11;
  intr($33,reg);
  dx:=reg.cx;
  dy:=reg.dx
  end;(*aboutmouse*)

{-----------------------------------}
procedure readkeymous(cler:boolean;var r1,r2:char; var dx,dy:integer; var n:byte);
 var nh,i:byte;
     xh,yh:integer;
   begin
    while keypressed and cler do r1:=readkey;
    r1:=#0;r2:=#0;
    dx:=0;dy:=0;n:=0;
    repeat
     if keypressed then begin
                        r1:=readkey;
                        if (r1=#0)and(keypressed) then r2:=readkey;
                        exit;
                        end
                   else begin
                        aboutmouse(dx,dy,n);
                        dx:=dx+dxmousehran;
                        dy:=dy+dymousehran;
                        dxmousehran:=0;
                        dymousehran:=0;
                        if (dx<>0)or(dy<>0)then exit;
                        end;
    until (n>0)or(not(cler)) ;
    if n=0 then exit;
    nh:=n;
    i:=0;
    repeat
     aboutmouse(dx,dy,n);
     delay(4);
     inc(i);
    until (n=0)or(i>40)or(dx<>0)or(dy<>0);
    if (n>0)or(dx<>0)or(dy<>0) then exit;
    i:=0;
    repeat
     aboutmouse(dx,dy,n);
     delay(4);
     inc(i);
    until (n>0)or(i>40);
    dx:=0; dy:=0;
    if n=0 then n:=nh
           else n:=n+2;
   end;

{----------------------------------------------------}

function mousepressed:boolean;
var n:byte;
    hx,hy:integer;
begin
if (dxmousehran=0)and(dymousehran=0) then
 begin
 hx:=dxmousehran;
 hy:=dymousehran;
 aboutmouse(dxmousehran,dymousehran,n);
 inc(dxmousehran,hx);
 inc(dymousehran,hy);
 end;
if (dxmousehran=0)and(dymousehran=0)and(n=0) then mousepressed:=false
                                             else mousepressed:=true;
end;

{------------------------------------------------------}

procedure STRPLUS(var s:string; n:byte);
var i,l:byte;
 begin
 l:=n-length(s);
 for i:=1 to l do
  s:=s+' ';
 end;

{--------------------------------------------------}

procedure posttext(x,y,lx,ly:word; k,c,orbuk:byte);
var m:array[1..50]of pointtype;
    sm1,sm2:typt;
    i:byte;
    neg:boolean;
begin
 if (orbuk and 4)=4 then neg:=true
                else neg:=false;
 orbuk:=orbuk and 3;
 setfillstyle(1,c);
 if c=0 then c:=getmaxcolor+1;
 setcolor(c);
 sm1:=tex^[k];
 with sm1 do
  begin
  if ((neg)and(orbuk<>2))or((not(neg))and(orbuk=2)) then
   for i:=1 to n do p[1,i]:=40-p[1,i];
  if (orbuk=2) then
   for i:=1 to n do p[2,i]:=40-p[2,i];
  end;
 sm2:=sm1;
 with sm1 do
  begin
  if (orbuk=1) then
   for i:=1 to n do
    begin
    sm2.p[1,i]:=40-p[2,i];
    sm2.p[2,i]:=p[1,i];
    end;
  if (orbuk=3) then
   for i:=1 to n do
    begin
    sm2.p[1,i]:=p[2,i];
    sm2.p[2,i]:=40-p[1,i];
    end;
  end;
 with sm2{tex^[k]} do
  begin
  for i:=1 to n do
   begin
   m[i].x:=x+longint(p[1,i])*lx div 40;
   m[i].y:=y+longint(p[2,i])*ly div 40;
   end;
  fillpoly(n,m);
  end;
end;

{-------------------------------------------------}

PROCEDURE INITTEXT;

(* --------------------------------------- *)
(* ------- текстовые символы только ------ *)
(* --- частично совпадают с ASKI кодом --- *)
(* --------------------------------------- *)

(*   0 - {знак фирмы}
  {-------------}
    48 - {ноль}
    49 - {единица}
    50 - {двойка}
    51 - {тройка}
    52 - {четвертка}
    53 - {пятерка}
    54 - {шестерка}
    55 - {семерка}
    56 - {восьмерка}
    57 - {девятка}
    58 - {:}
  {----------}
    65 - {A}
    66 - {B}
    67 - {C}
    68 - {D}
    69 - {E}
    70 - {F}
    71 - {G}
    72 - {H}
    73 - {I}
    74 - {J}
    75 - {K}
    76 - {L}
    77 - {M}
    78 - {N}
    79 - {O}
    80 - {P}
    81 - {Q}
    82 - {R}
    83 - {S}
    84 - {T}
    85 - {U}
    86 - {V}
    87 - {W}
    88 - {X}
    89 - {Y}
    90 - {Z}
  {----------}
   200 - {одиночная вверх}
   201 - {одиночная вправо}
   202 - {одиночная вниз}
   203 - {одиночная влево}
   204 - {двойная вверх и вправо}
   205 - {двойная вправо и вниз}
   206 - {двойная вниз и влево}
   207 - {двойная влево и вверх}
   208 - {тройная вверх}
   209 - {тройная вправо}
   210 - {тройная вниз}
   211 - {тройная влево}
   212 - {вертикальная}
   213 - {горизонтальная}
   214 - {крестовина}
   215 - {одиночная точка}
   216 - {не трассировать на ентом слое}
   217 - {одиночная вверх с кольцом}
   218 - {одиночная вправо с кольцом}
   219 - {одиночная вниз с кольцом}
   220 - {одиночная влево с кольцом}
   221 - {двойная верх и в право с кольцом}
   222 - {двойная вниз и вправо с кольцом}
   223 - {двойная влево и вниз с кольцом}
   224 - {двойная вверх и влево с кольцом}
   225 - {тройная вверх с кольцом}
  {----------}
   232 - {кружок}
   233 - {не трассировать ни где}
   235 - {точка}
   236 - {кольцо}
   237 - {вверх}
   238 - {вправо}
   239 - {вниз}
   240 - {влево}
   241 - {вверх и вправо}
   242 - {вправо и вниз}
   243 - {вниз и влево}
   244 - {влево и вверх}
   245 - {вверх и вправо уголок}
   246 - {вправо и вниз уголок}
   247 - {вниз и влево уголок}
   248 - {влево и вверх уголок}
    ----------------------------------*)

var i:byte;
begin
for i:=0 to 255 do tex^[i].n:=0;
with tex^[0] do
 begin {знак фирмы}
 n:=17;
 p[1,1]:=12;p[2,1]:=8;
 p[1,2]:=12;p[2,2]:=14;
 p[1,3]:=40;p[2,3]:=14;
 p[1,4]:=40;p[2,4]:=20;
 p[1,5]:=34;p[2,5]:=20;
 p[1,6]:=30;p[2,6]:=16;
 p[1,7]:=30;p[2,7]:=18;
 p[1,8]:=8;p[2,8]:=18;
 p[1,9]:=8;p[2,9]:=22;
 p[1,10]:=30;p[2,10]:=22;
 p[1,11]:=30;p[2,11]:=24;
 p[1,12]:=34;p[2,12]:=20;
 p[1,13]:=40;p[2,13]:=20;
 p[1,14]:=40;p[2,14]:=26;
 p[1,15]:=12;p[2,15]:=26;
 p[1,16]:=12;p[2,16]:=32;
 p[1,17]:=0;p[2,17]:=20;
 end;
with tex^[48] do
 begin {ноль}
 n:=10;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=30;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=30;
 p[1,6]:=30;p[2,6]:=30;
 p[1,7]:=30;p[2,7]:=10;
 p[1,8]:=34;p[2,8]:=6;
 p[1,9]:=34;p[2,9]:=34;
 p[1,10]:=6;p[2,10]:=34;
 end;
with tex^[49] do
 begin {единица}
 n:=10;
 p[1,1]:=10;p[2,1]:=6;
 p[1,2]:=22;p[2,2]:=6;
 p[1,3]:=22;p[2,3]:=30;
 p[1,4]:=34;p[2,4]:=30;
 p[1,5]:=34;p[2,5]:=34;
 p[1,6]:=6;p[2,6]:=34;
 p[1,7]:=6;p[2,7]:=30;
 p[1,8]:=18;p[2,8]:=30;
 p[1,9]:=18;p[2,9]:=10;
 p[1,10]:=10;p[2,10]:=10;
 end;
with tex^[50] do
 begin {двойка}
 n:=12;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=22;
 p[1,4]:=10;p[2,4]:=22;
 p[1,5]:=10;p[2,5]:=30;
 p[1,6]:=34;p[2,6]:=30;
 p[1,7]:=34;p[2,7]:=34;
 p[1,8]:=6;p[2,8]:=34;
 p[1,9]:=6;p[2,9]:=18;
 p[1,10]:=30;p[2,10]:=18;
 p[1,11]:=30;p[2,11]:=10;
 p[1,12]:=6;p[2,12]:=10;
 end;
with tex^[51] do
 begin {тройка}
 n:=12;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=34;
 p[1,4]:=6;p[2,4]:=34;
 p[1,5]:=6;p[2,5]:=30;
 p[1,6]:=30;p[2,6]:=30;
 p[1,7]:=30;p[2,7]:=22;
 p[1,8]:=6;p[2,8]:=22;
 p[1,9]:=6;p[2,9]:=18;
 p[1,10]:=30;p[2,10]:=18;
 p[1,11]:=30;p[2,11]:=10;
 p[1,12]:=6;p[2,12]:=10;
 end;
with tex^[52] do
 begin {четвертка}
 n:=10;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=10;p[2,3]:=18;
 p[1,4]:=30;p[2,4]:=18;
 p[1,5]:=30;p[2,5]:=6;
 p[1,6]:=34;p[2,6]:=6;
 p[1,7]:=34;p[2,7]:=34;
 p[1,8]:=30;p[2,8]:=34;
 p[1,9]:=30;p[2,9]:=22;
 p[1,10]:=6;p[2,10]:=22;
 end;
with tex^[53] do
 begin {пятерка}
 n:=12;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=18;
 p[1,6]:=34;p[2,6]:=18;
 p[1,7]:=34;p[2,7]:=34;
 p[1,8]:=6;p[2,8]:=34;
 p[1,9]:=6;p[2,9]:=30;
 p[1,10]:=30;p[2,10]:=30;
 p[1,11]:=30;p[2,11]:=22;
 p[1,12]:=6;p[2,12]:=22;
 end;
with tex^[54] do
 begin {шестерка}
 n:=14;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=18;
 p[1,6]:=34;p[2,6]:=18;
 p[1,7]:=30;p[2,7]:=22;
 p[1,8]:=10;p[2,8]:=22;
 p[1,9]:=10;p[2,9]:=30;
 p[1,10]:=30;p[2,10]:=30;
 p[1,11]:=30;p[2,11]:=22;
 p[1,12]:=34;p[2,12]:=18;
 p[1,13]:=34;p[2,13]:=34;
 p[1,14]:=6;p[2,14]:=34;
 end;
with tex^[55] do
 begin {семерка}
 n:=6;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=34;
 p[1,4]:=30;p[2,4]:=34;
 p[1,5]:=30;p[2,5]:=10;
 p[1,6]:=6;p[2,6]:=10;
 end;
with tex^[56] do
 begin {восьмерка}
 n:=14;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=30;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=18;
 p[1,6]:=30;p[2,6]:=18;
 p[1,7]:=30;p[2,7]:=22;
 p[1,8]:=10;p[2,8]:=22;
 p[1,9]:=10;p[2,9]:=30;
 p[1,10]:=30;p[2,10]:=30;
 p[1,11]:=30;p[2,11]:=10;
 p[1,12]:=34;p[2,12]:=6;
 p[1,13]:=34;p[2,13]:=34;
 p[1,14]:=6;p[2,14]:=34;
 end;
with tex^[57] do
 begin {девятка}
 n:=14;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=30;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=18;
 p[1,6]:=30;p[2,6]:=18;
 p[1,7]:=30;p[2,7]:=10;
 p[1,8]:=34;p[2,8]:=6;
 p[1,9]:=34;p[2,9]:=34;
 p[1,10]:=6;p[2,10]:=34;
 p[1,11]:=6;p[2,11]:=30;
 p[1,12]:=30;p[2,12]:=30;
 p[1,13]:=30;p[2,13]:=22;
 p[1,14]:=6;p[2,14]:=22;
 end;
with tex^[58] do
 begin {:}
 n:=12;
 p[1,1]:=16;p[2,1]:=6;
 p[1,2]:=24;p[2,2]:=6;
 p[1,3]:=24;p[2,3]:=14;
 p[1,4]:=20;p[2,4]:=14;
 p[1,5]:=20;p[2,5]:=26;
 p[1,6]:=24;p[2,6]:=26;
 p[1,7]:=24;p[2,7]:=34;
 p[1,8]:=16;p[2,8]:=34;
 p[1,9]:=16;p[2,9]:=26;
 p[1,10]:=20;p[2,10]:=26;
 p[1,11]:=20;p[2,11]:=14;
 p[1,12]:=16;p[2,12]:=14;
 end;
with tex^[65] do
 begin {A}
 n:=14;
 p[1,1]:=14;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=22;p[2,3]:=10;
 p[1,4]:=18;p[2,4]:=10;
 p[1,5]:=14;p[2,5]:=20;
 p[1,6]:=26;p[2,6]:=20;
 p[1,7]:=22;p[2,7]:=10;
 p[1,8]:=26;p[2,8]:=6;
 p[1,9]:=34;p[2,9]:=34;
 p[1,10]:=30;p[2,10]:=34;
 p[1,11]:=26;p[2,11]:=24;
 p[1,12]:=12;p[2,12]:=24;
 p[1,13]:=10;p[2,13]:=34;
 p[1,14]:=6;p[2,14]:=34;
 end;
with tex^[66] do
 begin {B}
 n:=25;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=26;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=18;
 p[1,6]:=26;p[2,6]:=18;
 p[1,7]:=26;p[2,7]:=22;
 p[1,8]:=10;p[2,8]:=22;
 p[1,9]:=10;p[2,9]:=30;
 p[1,10]:=26;p[2,10]:=30;
 p[1,11]:=30;p[2,11]:=28;
 p[1,12]:=30;p[2,12]:=24;
 p[1,13]:=26;p[2,13]:=22;
 p[1,14]:=26;p[2,14]:=18;
 p[1,15]:=30;p[2,15]:=16;
 p[1,16]:=30;p[2,16]:=12;
 p[1,17]:=26;p[2,17]:=10;
 p[1,18]:=26;p[2,18]:=6;
 p[1,19]:=34;p[2,19]:=10;
 p[1,20]:=34;p[2,20]:=18;
 p[1,21]:=30;p[2,21]:=20;
 p[1,22]:=34;p[2,22]:=22;
 p[1,23]:=34;p[2,23]:=30;
 p[1,24]:=26;p[2,24]:=34;
 p[1,25]:=6;p[2,25]:=34;
 end;
with tex^[67] do
 begin {C}
 n:=20;
 p[1,1]:=14;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=34;p[2,4]:=16;
 p[1,5]:=30;p[2,5]:=16;
 p[1,6]:=30;p[2,6]:=12;
 p[1,7]:=26;p[2,7]:=10;
 p[1,8]:=14;p[2,8]:=10;
 p[1,9]:=10;p[2,9]:=12;
 p[1,10]:=10;p[2,10]:=28;
 p[1,11]:=14;p[2,11]:=30;
 p[1,12]:=26;p[2,12]:=30;
 p[1,13]:=30;p[2,13]:=28;
 p[1,14]:=30;p[2,14]:=24;
 p[1,15]:=34;p[2,15]:=24;
 p[1,16]:=34;p[2,16]:=30;
 p[1,17]:=26;p[2,17]:=34;
 p[1,18]:=14;p[2,18]:=34;
 p[1,19]:=6;p[2,19]:=30;
 p[1,20]:=6;p[2,20]:=10;
 end;
with tex^[68] do
 begin {D}
 n:=14;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=22;p[2,2]:=6;
 p[1,3]:=22;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=30;
 p[1,6]:=22;p[2,6]:=30;
 p[1,7]:=30;p[2,7]:=26;
 p[1,8]:=30;p[2,8]:=14;
 p[1,9]:=22;p[2,9]:=10;
 p[1,10]:=22;p[2,10]:=6;
 p[1,11]:=34;p[2,11]:=12;
 p[1,12]:=34;p[2,12]:=28;
 p[1,13]:=22;p[2,13]:=34;
 p[1,14]:=6;p[2,14]:=34;
 end;
with tex^[69] do
 begin {E}
 n:=20;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=34;p[2,4]:=14;
 p[1,5]:=30;p[2,5]:=14;
 p[1,6]:=30;p[2,6]:=12;
 p[1,7]:=26;p[2,7]:=10;
 p[1,8]:=10;p[2,8]:=10;
 p[1,9]:=10;p[2,9]:=18;
 p[1,10]:=22;p[2,10]:=18;
 p[1,11]:=22;p[2,11]:=22;
 p[1,12]:=10;p[2,12]:=22;
 p[1,13]:=10;p[2,13]:=30;
 p[1,14]:=26;p[2,14]:=30;
 p[1,15]:=30;p[2,15]:=28;
 p[1,16]:=30;p[2,16]:=26;
 p[1,17]:=34;p[2,17]:=26;
 p[1,18]:=34;p[2,18]:=30;
 p[1,19]:=26;p[2,19]:=34;
 p[1,20]:=6;p[2,20]:=34;
 end;

with tex^[70] do
 begin {F}
 n:=10;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=18;
 p[1,6]:=24;p[2,6]:=18;
 p[1,7]:=24;p[2,7]:=22;
 p[1,8]:=10;p[2,8]:=22;
 p[1,9]:=10;p[2,9]:=34;
 p[1,10]:=6;p[2,10]:=34;
 end;
with tex^[71] do
 begin {G}
 n:=23;
 p[1,1]:=14;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=34;p[2,4]:=14;
 p[1,5]:=30;p[2,5]:=14;
 p[1,6]:=30;p[2,6]:=12;
 p[1,7]:=26;p[2,7]:=10;
 p[1,8]:=14;p[2,8]:=10;
 p[1,9]:=10;p[2,9]:=12;
 p[1,10]:=10;p[2,10]:=28;
 p[1,11]:=14;p[2,11]:=30;
 p[1,12]:=26;p[2,12]:=30;
 p[1,13]:=30;p[2,13]:=28;
 p[1,14]:=30;p[2,14]:=26;
 p[1,15]:=20;p[2,15]:=26;
 p[1,16]:=20;p[2,16]:=22;
 p[1,17]:=34;p[2,17]:=22;
 p[1,18]:=34;p[2,18]:=32;
 p[1,19]:=30;p[2,19]:=32;
 p[1,20]:=26;p[2,20]:=34;
 p[1,21]:=14;p[2,21]:=34;
 p[1,22]:=6;p[2,22]:=30;
 p[1,23]:=6;p[2,23]:=10;
 end;
with tex^[72] do
 begin {H}
 n:=12;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=10;p[2,3]:=18;
 p[1,4]:=30;p[2,4]:=18;
 p[1,5]:=30;p[2,5]:=6;
 p[1,6]:=34;p[2,6]:=6;
 p[1,7]:=34;p[2,7]:=34;
 p[1,8]:=30;p[2,8]:=34;
 p[1,9]:=30;p[2,9]:=22;
 p[1,10]:=10;p[2,10]:=22;
 p[1,11]:=10;p[2,11]:=34;
 p[1,12]:=6;p[2,12]:=34;
 end;
with tex^[73] do
 begin {I}
 n:=12;
 p[1,1]:=10;p[2,1]:=6;
 p[1,2]:=30;p[2,2]:=6;
 p[1,3]:=30;p[2,3]:=10;
 p[1,4]:=22;p[2,4]:=10;
 p[1,5]:=22;p[2,5]:=30;
 p[1,6]:=30;p[2,6]:=30;
 p[1,7]:=30;p[2,7]:=34;
 p[1,8]:=10;p[2,8]:=34;
 p[1,9]:=10;p[2,9]:=30;
 p[1,10]:=18;p[2,10]:=30;
 p[1,11]:=18;p[2,11]:=10;
 p[1,12]:=10;p[2,12]:=10;
 end;
with tex^[74] do
 begin {J}
 n:=14;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=30;
 p[1,4]:=26;p[2,4]:=34;
 p[1,5]:=14;p[2,5]:=34;
 p[1,6]:=6;p[2,6]:=30;
 p[1,7]:=6;p[2,7]:=24;
 p[1,8]:=10;p[2,8]:=24;
 p[1,9]:=10;p[2,9]:=28;
 p[1,10]:=14;p[2,10]:=30;
 p[1,11]:=26;p[2,11]:=30;
 p[1,12]:=30;p[2,12]:=28;
 p[1,13]:=30;p[2,13]:=10;
 p[1,14]:=6;p[2,14]:=10;
 end;
with tex^[75] do
 begin {K}
 n:=15;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=10;p[2,3]:=18;
 p[1,4]:=20;p[2,4]:=18;
 p[1,5]:=30;p[2,5]:=6;
 p[1,6]:=34;p[2,6]:=6;
 p[1,7]:=34;p[2,7]:=10;
 p[1,8]:=24;p[2,8]:=20;
 p[1,9]:=34;p[2,9]:=30;
 p[1,10]:=34;p[2,10]:=34;
 p[1,11]:=30;p[2,11]:=34;
 p[1,12]:=20;p[2,12]:=22;
 p[1,13]:=10;p[2,13]:=22;
 p[1,14]:=10;p[2,14]:=34;
 p[1,15]:=6;p[2,15]:=34;
 end;
with tex^[76] do
 begin {L}
 n:=10;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=10;p[2,3]:=30;
 p[1,4]:=26;p[2,4]:=30;
 p[1,5]:=30;p[2,5]:=28;
 p[1,6]:=30;p[2,6]:=24;
 p[1,7]:=34;p[2,7]:=24;
 p[1,8]:=34;p[2,8]:=30;
 p[1,9]:=26;p[2,9]:=34;
 p[1,10]:=6;p[2,10]:=34;
 end;
with tex^[77] do
 begin {M}
 n:=12;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=20;p[2,3]:=16;
 p[1,4]:=30;p[2,4]:=6;
 p[1,5]:=34;p[2,5]:=6;
 p[1,6]:=34;p[2,6]:=34;
 p[1,7]:=30;p[2,7]:=34;
 p[1,8]:=30;p[2,8]:=12;
 p[1,9]:=20;p[2,9]:=22;
 p[1,10]:=10;p[2,10]:=12;
 p[1,11]:=10;p[2,11]:=34;
 p[1,12]:=6;p[2,12]:=34;
 end;
with tex^[78] do
 begin {N}
 n:=10;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=30;p[2,3]:=28;
 p[1,4]:=30;p[2,4]:=6;
 p[1,5]:=34;p[2,5]:=6;
 p[1,6]:=34;p[2,6]:=34;
 p[1,7]:=30;p[2,7]:=34;
 p[1,8]:=10;p[2,8]:=12;
 p[1,9]:=10;p[2,9]:=34;
 p[1,10]:=6;p[2,10]:=34;
 end;
with tex^[79] do
 begin {O}
 n:=18;
 p[1,1]:=14;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=26;p[2,3]:=10;
 p[1,4]:=14;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=12;
 p[1,6]:=10;p[2,6]:=28;
 p[1,7]:=14;p[2,7]:=30;
 p[1,8]:=26;p[2,8]:=30;
 p[1,9]:=30;p[2,9]:=28;
 p[1,10]:=30;p[2,10]:=12;
 p[1,11]:=26;p[2,11]:=10;
 p[1,12]:=26;p[2,12]:=6;
 p[1,13]:=34;p[2,13]:=10;
 p[1,14]:=34;p[2,14]:=30;
 p[1,15]:=26;p[2,15]:=34;
 p[1,16]:=14;p[2,16]:=34;
 p[1,17]:=6;p[2,17]:=30;
 p[1,18]:=6;p[2,18]:=10;
 end;
with tex^[80] do
 begin {P}
 n:=16;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=26;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=18;
 p[1,6]:=26;p[2,6]:=18;
 p[1,7]:=30;p[2,7]:=16;
 p[1,8]:=30;p[2,8]:=12;
 p[1,9]:=26;p[2,9]:=10;
 p[1,10]:=26;p[2,10]:=6;
 p[1,11]:=34;p[2,11]:=10;
 p[1,12]:=34;p[2,12]:=18;
 p[1,13]:=26;p[2,13]:=22;
 p[1,14]:=10;p[2,14]:=22;
 p[1,15]:=10;p[2,15]:=34;
 p[1,16]:=6;p[2,16]:=34;
 end;
with tex^[81] do
 begin {Q}
 n:=24;
 p[1,1]:=14;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=34;p[2,4]:=26;
 p[1,5]:=31;p[2,5]:=29;
 p[1,6]:=28;p[2,6]:=26;
 p[1,7]:=30;p[2,7]:=24;
 p[1,8]:=30;p[2,8]:=12;
 p[1,9]:=26;p[2,9]:=10;
 p[1,10]:=14;p[2,10]:=10;
 p[1,11]:=10;p[2,11]:=12;
 p[1,12]:=10;p[2,12]:=28;
 p[1,13]:=14;p[2,13]:=30;
 p[1,14]:=24;p[2,14]:=30;
 p[1,15]:=25;p[2,15]:=29;
 p[1,16]:=21;p[2,16]:=25;
 p[1,17]:=25;p[2,17]:=23;
 p[1,18]:=34;p[2,18]:=32;
 p[1,19]:=30;p[2,19]:=34;
 p[1,20]:=28;p[2,20]:=32;
 p[1,21]:=26;p[2,21]:=34;
 p[1,22]:=14;p[2,22]:=34;
 p[1,23]:=6;p[2,23]:=30;
 p[1,24]:=6;p[2,24]:=10;
 end;
with tex^[82] do
 begin {R}
 n:=20;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=26;p[2,3]:=10;
 p[1,4]:=10;p[2,4]:=10;
 p[1,5]:=10;p[2,5]:=18;
 p[1,6]:=26;p[2,6]:=18;
 p[1,7]:=30;p[2,7]:=16;
 p[1,8]:=30;p[2,8]:=12;
 p[1,9]:=26;p[2,9]:=10;
 p[1,10]:=26;p[2,10]:=6;
 p[1,11]:=34;p[2,11]:=10;
 p[1,12]:=34;p[2,12]:=18;
 p[1,13]:=26;p[2,13]:=22;
 p[1,14]:=34;p[2,14]:=30;
 p[1,15]:=34;p[2,15]:=34;
 p[1,16]:=30;p[2,16]:=34;
 p[1,17]:=20;p[2,17]:=22;
 p[1,18]:=10;p[2,18]:=22;
 p[1,19]:=10;p[2,19]:=34;
 p[1,20]:=6;p[2,20]:=34;
 end;
with tex^[83] do
 begin {S}
 n:=28;
 p[1,1]:=14;p[2,1]:=6;
 p[1,2]:=26;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=34;p[2,4]:=14;
 p[1,5]:=30;p[2,5]:=14;
 p[1,6]:=30;p[2,6]:=12;
 p[1,7]:=26;p[2,7]:=10;
 p[1,8]:=14;p[2,8]:=10;
 p[1,9]:=10;p[2,9]:=12;
 p[1,10]:=10;p[2,10]:=16;
 p[1,11]:=14;p[2,11]:=18;
 p[1,12]:=26;p[2,12]:=18;
 p[1,13]:=34;p[2,13]:=22;
 p[1,14]:=34;p[2,14]:=30;
 p[1,15]:=26;p[2,15]:=34;
 p[1,16]:=14;p[2,16]:=34;
 p[1,17]:=6;p[2,17]:=30;
 p[1,18]:=6;p[2,18]:=26;
 p[1,19]:=10;p[2,19]:=26;
 p[1,20]:=10;p[2,20]:=28;
 p[1,21]:=14;p[2,21]:=30;
 p[1,22]:=26;p[2,22]:=30;
 p[1,23]:=30;p[2,23]:=28;
 p[1,24]:=30;p[2,24]:=24;
 p[1,25]:=26;p[2,25]:=22;
 p[1,26]:=14;p[2,26]:=22;
 p[1,27]:=6;p[2,27]:=18;
 p[1,28]:=6;p[2,28]:=10;
 end;
with tex^[84] do
 begin {T}
 n:=8;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=22;p[2,4]:=10;
 p[1,5]:=22;p[2,5]:=34;
 p[1,6]:=18;p[2,6]:=34;
 p[1,7]:=18;p[2,7]:=10;
 p[1,8]:=6;p[2,8]:=10;
 end;
with tex^[85] do
 begin {U}
 n:=12;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=10;p[2,3]:=28;
 p[1,4]:=14;p[2,4]:=30;
 p[1,5]:=26;p[2,5]:=30;
 p[1,6]:=30;p[2,6]:=28;
 p[1,7]:=30;p[2,7]:=6;
 p[1,8]:=34;p[2,8]:=6;
 p[1,9]:=34;p[2,9]:=30;
 p[1,10]:=26;p[2,10]:=34;
 p[1,11]:=14;p[2,11]:=34;
 p[1,12]:=6;p[2,12]:=30;
 end;
with tex^[86] do
 begin {V}
 n:=6;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=20;p[2,3]:=28;
 p[1,4]:=30;p[2,4]:=6;
 p[1,5]:=34;p[2,5]:=6;
 p[1,6]:=20;p[2,6]:=34;
 end;
with tex^[87] do
 begin {W}
 n:=19;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=10;p[2,3]:=24;
 p[1,4]:=12;p[2,4]:=28;
 p[1,5]:=14;p[2,5]:=28;
 p[1,6]:=18;p[2,6]:=20;
 p[1,7]:=22;p[2,7]:=20;
 p[1,8]:=26;p[2,8]:=28;
 p[1,9]:=28;p[2,9]:=28;
 p[1,10]:=30;p[2,10]:=24;
 p[1,11]:=30;p[2,11]:=6;
 p[1,12]:=34;p[2,12]:=6;
 p[1,13]:=34;p[2,13]:=26;
 p[1,14]:=30;p[2,14]:=34;
 p[1,15]:=24;p[2,15]:=34;
 p[1,16]:=20;p[2,16]:=26;
 p[1,17]:=16;p[2,17]:=34;
 p[1,18]:=10;p[2,18]:=34;
 p[1,19]:=6;p[2,19]:=26;
 end;
with tex^[88] do
 begin {X}
 n:=16;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=20;p[2,3]:=16;
 p[1,4]:=30;p[2,4]:=6;
 p[1,5]:=34;p[2,5]:=6;
 p[1,6]:=34;p[2,6]:=10;
 p[1,7]:=24;p[2,7]:=20;
 p[1,8]:=34;p[2,8]:=30;
 p[1,9]:=34;p[2,9]:=34;
 p[1,10]:=30;p[2,10]:=34;
 p[1,11]:=24;p[2,11]:=20;
 p[1,12]:=10;p[2,12]:=34;
 p[1,13]:=6;p[2,13]:=34;
 p[1,14]:=6;p[2,14]:=30;
 p[1,15]:=16;p[2,15]:=20;
 p[1,16]:=6;p[2,16]:=10;
 end;
with tex^[89] do
 begin {Y}
 n:=11;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=10;p[2,2]:=6;
 p[1,3]:=20;p[2,3]:=16;
 p[1,4]:=30;p[2,4]:=6;
 p[1,5]:=34;p[2,5]:=6;
 p[1,6]:=34;p[2,6]:=10;
 p[1,7]:=22;p[2,7]:=22;
 p[1,8]:=22;p[2,8]:=34;
 p[1,9]:=18;p[2,9]:=34;
 p[1,10]:=18;p[2,10]:=22;
 p[1,11]:=6;p[2,11]:=10;
 end;
with tex^[90] do
 begin {Z}
 n:=18;
 p[1,1]:=6;p[2,1]:=6;
 p[1,2]:=34;p[2,2]:=6;
 p[1,3]:=34;p[2,3]:=10;
 p[1,4]:=26;p[2,4]:=18;
 p[1,5]:=28;p[2,5]:=18;
 p[1,6]:=28;p[2,6]:=22;
 p[1,7]:=22;p[2,7]:=22;
 p[1,8]:=14;p[2,8]:=30;
 p[1,9]:=34;p[2,9]:=30;
 p[1,10]:=34;p[2,10]:=34;
 p[1,11]:=6;p[2,11]:=34;
 p[1,12]:=6;p[2,12]:=30;
 p[1,13]:=14;p[2,13]:=22;
 p[1,14]:=12;p[2,14]:=22;
 p[1,15]:=12;p[2,15]:=18;
 p[1,16]:=18;p[2,16]:=18;
 p[1,17]:=26;p[2,17]:=10;
 p[1,18]:=6;p[2,18]:=10;
 end;
with tex^[200] do
 begin {одиночная вверх}
 n:=9;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=20;
 p[1,4]:=25;p[2,4]:=23;
 p[1,5]:=23;p[2,5]:=25;
 p[1,6]:=20;p[2,6]:=26;
 p[1,7]:=17;p[2,7]:=25;
 p[1,8]:=15;p[2,8]:=23;
 p[1,9]:=14;p[2,9]:=20;
 end;
with tex^[201] do
 begin {одиночная вправо}
 n:=9;
 p[1,1]:=20;p[2,1]:=14;
 p[1,2]:=40;p[2,2]:=14;
 p[1,3]:=40;p[2,3]:=26;
 p[1,4]:=20;p[2,4]:=26;
 p[1,5]:=17;p[2,5]:=25;
 p[1,6]:=15;p[2,6]:=23;
 p[1,7]:=14;p[2,7]:=20;
 p[1,8]:=15;p[2,8]:=17;
 p[1,9]:=17;p[2,9]:=15;
 end;
with tex^[202] do
 begin {одиночная вниз}
 n:=9;
 p[1,1]:=20;p[2,1]:=14;
 p[1,2]:=23;p[2,2]:=15;
 p[1,3]:=25;p[2,3]:=17;
 p[1,4]:=26;p[2,4]:=20;
 p[1,5]:=26;p[2,5]:=40;
 p[1,6]:=14;p[2,6]:=40;
 p[1,7]:=14;p[2,7]:=20;
 p[1,8]:=15;p[2,8]:=17;
 p[1,9]:=17;p[2,9]:=15;
 end;
with tex^[203] do
 begin {одиночная влево}
 n:=9;
 p[1,1]:=0;p[2,1]:=14;
 p[1,2]:=20;p[2,2]:=14;
 p[1,3]:=23;p[2,3]:=15;
 p[1,4]:=25;p[2,4]:=17;
 p[1,5]:=26;p[2,5]:=20;
 p[1,6]:=25;p[2,6]:=23;
 p[1,7]:=23;p[2,7]:=25;
 p[1,8]:=20;p[2,8]:=26;
 p[1,9]:=0;p[2,9]:=26;
 end;
with tex^[204] do
 begin {двойная вверх и вправо}
 n:=6;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=14;
 p[1,4]:=40;p[2,4]:=14;
 p[1,5]:=40;p[2,5]:=26;
 p[1,6]:=14;p[2,6]:=26;
 end;
with tex^[205] do
 begin {двойная вправо и вниз}
 n:=6;
 p[1,1]:=14;p[2,1]:=14;
 p[1,2]:=40;p[2,2]:=14;
 p[1,3]:=40;p[2,3]:=26;
 p[1,4]:=26;p[2,4]:=26;
 p[1,5]:=26;p[2,5]:=40;
 p[1,6]:=14;p[2,6]:=40;
 end;
with tex^[206] do
 begin {двойная вниз и влево}
 n:=6;
 p[1,1]:=0;p[2,1]:=14;
 p[1,2]:=26;p[2,2]:=14;
 p[1,3]:=26;p[2,3]:=40;
 p[1,4]:=14;p[2,4]:=40;
 p[1,5]:=14;p[2,5]:=26;
 p[1,6]:=0;p[2,6]:=26;
 end;
with tex^[207] do
 begin {двойная влево и вверх}
 n:=6;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=26;
 p[1,4]:=0;p[2,4]:=26;
 p[1,5]:=0;p[2,5]:=14;
 p[1,6]:=14;p[2,6]:=14;
 end;
with tex^[208] do
 begin {тройная вверх}
 n:=8;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=14;
 p[1,4]:=40;p[2,4]:=14;
 p[1,5]:=40;p[2,5]:=26;
 p[1,6]:=0;p[2,6]:=26;
 p[1,7]:=0;p[2,7]:=14;
 p[1,8]:=14;p[2,8]:=14;
 end;
with tex^[209] do
 begin {тройная вправо}
 n:=8;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=14;
 p[1,4]:=40;p[2,4]:=14;
 p[1,5]:=40;p[2,5]:=26;
 p[1,6]:=26;p[2,6]:=26;
 p[1,7]:=26;p[2,7]:=40;
 p[1,8]:=14;p[2,8]:=40;
 end;
with tex^[210] do
 begin {тройная вниз}
 n:=8;
 p[1,1]:=0;p[2,1]:=14;
 p[1,2]:=40;p[2,2]:=14;
 p[1,3]:=40;p[2,3]:=26;
 p[1,4]:=26;p[2,4]:=26;
 p[1,5]:=26;p[2,5]:=40;
 p[1,6]:=14;p[2,6]:=40;
 p[1,7]:=14;p[2,7]:=26;
 p[1,8]:=0;p[2,8]:=26;
 end;
with tex^[211] do
 begin {тройная влево}
 n:=8;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=40;
 p[1,4]:=14;p[2,4]:=40;
 p[1,5]:=14;p[2,5]:=26;
 p[1,6]:=0;p[2,6]:=26;
 p[1,7]:=0;p[2,7]:=14;
 p[1,8]:=14;p[2,8]:=14;
 end;
with tex^[212] do
 begin {вертикальная}
 n:=4;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=40;
 p[1,4]:=14;p[2,4]:=40;
 end;
with tex^[213] do
 begin {горизонтальная}
 n:=4;
 p[1,1]:=0;p[2,1]:=14;
 p[1,2]:=40;p[2,2]:=14;
 p[1,3]:=40;p[2,3]:=26;
 p[1,4]:=0;p[2,4]:=26;
 end;
with tex^[214] do
 begin {крестовина}
 n:=12;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=14;
 p[1,4]:=40;p[2,4]:=14;
 p[1,5]:=40;p[2,5]:=26;
 p[1,6]:=26;p[2,6]:=26;
 p[1,7]:=26;p[2,7]:=40;
 p[1,8]:=14;p[2,8]:=40;
 p[1,9]:=14;p[2,9]:=26;
 p[1,10]:=0;p[2,10]:=26;
 p[1,11]:=0;p[2,11]:=14;
 p[1,12]:=14;p[2,12]:=14;
 end;
with tex^[215] do
 begin {одиночная точка}
 n:=4;
 p[1,1]:=14;p[2,1]:=14;
 p[1,2]:=26;p[2,2]:=14;
 p[1,3]:=26;p[2,3]:=26;
 p[1,4]:=14;p[2,4]:=26;
 end;
with tex^[216] do
 begin {не трассировать на ентом слое}
 n:=8;
 p[1,1]:=0;p[2,1]:=0;
 p[1,2]:=20;p[2,2]:=8;
 p[1,3]:=40;p[2,3]:=0;
 p[1,4]:=32;p[2,4]:=20;
 p[1,5]:=40;p[2,5]:=40;
 p[1,6]:=20;p[2,6]:=32;
 p[1,7]:=0;p[2,7]:=40;
 p[1,8]:=8;p[2,8]:=20;
 end;

with tex^[217] do
 begin {одиночная вверх с кольцом}
 n:=29;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=6;
 p[1,4]:=28;p[2,4]:=12;
 p[1,5]:=30;p[2,5]:=14;
 p[1,6]:=32;p[2,6]:=20;
 p[1,7]:=26;p[2,7]:=20;
 p[1,8]:=25;p[2,8]:=17;
 p[1,9]:=23;p[2,9]:=15;
 p[1,10]:=20;p[2,10]:=14;
 p[1,11]:=17;p[2,11]:=15;
 p[1,12]:=15;p[2,12]:=17;
 p[1,13]:=14;p[2,13]:=20;
 p[1,14]:=15;p[2,14]:=23;
 p[1,15]:=17;p[2,15]:=25;
 p[1,16]:=20;p[2,16]:=26;
 p[1,17]:=23;p[2,17]:=25;
 p[1,18]:=25;p[2,18]:=23;
 p[1,19]:=26;p[2,19]:=20;
 p[1,20]:=32;p[2,20]:=20;
 p[1,21]:=30;p[2,21]:=26;
 p[1,22]:=26;p[2,22]:=30;
 p[1,23]:=20;p[2,23]:=32;
 p[1,24]:=14;p[2,24]:=30;
 p[1,25]:=10;p[2,25]:=26;
 p[1,26]:=8;p[2,26]:=20;
 p[1,27]:=10;p[2,27]:=14;
 p[1,28]:=12;p[2,28]:=12;
 p[1,29]:=14;p[2,29]:=6;
 end;
with tex^[218] do
 begin {одиночная вправо с кольцом}
 n:=12;
 p[1,1]:=8;p[2,1]:=8;
 p[1,2]:=32;p[2,2]:=8;
 p[1,3]:=32;p[2,3]:=14;
 p[1,4]:=40;p[2,4]:=14;
 p[1,5]:=40;p[2,5]:=26;
 p[1,6]:=26;p[2,6]:=26;
 p[1,7]:=26;p[2,7]:=14;
 p[1,8]:=14;p[2,8]:=14;
 p[1,9]:=14;p[2,9]:=26;
 p[1,10]:=32;p[2,10]:=26;
 p[1,11]:=32;p[2,11]:=32;
 p[1,12]:=8;p[2,12]:=32;
 end;
with tex^[219] do
 begin {одиночная вниз с кольцом}
 n:=12;
 p[1,1]:=8;p[2,1]:=8;
 p[1,2]:=32;p[2,2]:=8;
 p[1,3]:=32;p[2,3]:=32;
 p[1,4]:=26;p[2,4]:=32;
 p[1,5]:=26;p[2,5]:=40;
 p[1,6]:=14;p[2,6]:=40;
 p[1,7]:=14;p[2,7]:=26;
 p[1,8]:=26;p[2,8]:=26;
 p[1,9]:=26;p[2,9]:=14;
 p[1,10]:=14;p[2,10]:=14;
 p[1,11]:=14;p[2,11]:=32;
 p[1,12]:=8;p[2,12]:=32;
 end;
with tex^[220] do
 begin {одиночная влево с кольцом}
 n:=12;
 p[1,1]:=8;p[2,1]:=8;
 p[1,2]:=32;p[2,2]:=8;
 p[1,3]:=32;p[2,3]:=32;
 p[1,4]:=8;p[2,4]:=32;
 p[1,5]:=8;p[2,5]:=26;
 p[1,6]:=0;p[2,6]:=26;
 p[1,7]:=0;p[2,7]:=14;
 p[1,8]:=14;p[2,8]:=14;
 p[1,9]:=14;p[2,9]:=26;
 p[1,10]:=26;p[2,10]:=26;
 p[1,11]:=26;p[2,11]:=14;
 p[1,12]:=8;p[2,12]:=14;
 end;
with tex^[221] do
 begin {двойная верх и в право с кольцом}
 n:=16;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=8;
 p[1,4]:=32;p[2,4]:=8;
 p[1,5]:=32;p[2,5]:=14;
 p[1,6]:=40;p[2,6]:=14;
 p[1,7]:=40;p[2,7]:=26;
 p[1,8]:=26;p[2,8]:=26;
 p[1,9]:=26;p[2,9]:=14;
 p[1,10]:=14;p[2,10]:=14;
 p[1,11]:=14;p[2,11]:=26;
 p[1,12]:=32;p[2,12]:=26;
 p[1,13]:=32;p[2,13]:=32;
 p[1,14]:=8;p[2,14]:=32;
 p[1,15]:=8;p[2,15]:=8;
 p[1,16]:=14;p[2,16]:=8;
 end;
with tex^[222] do
 begin {двойная вниз и вправо с кольцом}
 n:=16;
 p[1,1]:=8;p[2,1]:=8;
 p[1,2]:=32;p[2,2]:=8;
 p[1,3]:=32;p[2,3]:=14;
 p[1,4]:=40;p[2,4]:=14;
 p[1,5]:=40;p[2,5]:=26;
 p[1,6]:=32;p[2,6]:=26;
 p[1,7]:=32;p[2,7]:=32;
 p[1,8]:=26;p[2,8]:=32;
 p[1,9]:=26;p[2,9]:=40;
 p[1,10]:=14;p[2,10]:=40;
 p[1,11]:=14;p[2,11]:=26;
 p[1,12]:=26;p[2,12]:=26;
 p[1,13]:=26;p[2,13]:=14;
 p[1,14]:=14;p[2,14]:=14;
 p[1,15]:=14;p[2,15]:=32;
 p[1,16]:=8;p[2,16]:=32;
 end;
with tex^[223] do
 begin {двойная влево и вниз с кольцом}
 n:=16;
 p[1,1]:=8;p[2,1]:=8;
 p[1,2]:=32;p[2,2]:=8;
 p[1,3]:=32;p[2,3]:=32;
 p[1,4]:=26;p[2,4]:=32;
 p[1,5]:=26;p[2,5]:=40;
 p[1,6]:=14;p[2,6]:=40;
 p[1,7]:=14;p[2,7]:=32;
 p[1,8]:=8;p[2,8]:=32;
 p[1,9]:=8;p[2,9]:=26;
 p[1,10]:=0;p[2,10]:=26;
 p[1,11]:=0;p[2,11]:=14;
 p[1,12]:=14;p[2,12]:=14;
 p[1,13]:=14;p[2,13]:=26;
 p[1,14]:=26;p[2,14]:=26;
 p[1,15]:=26;p[2,15]:=14;
 p[1,16]:=8;p[2,16]:=14
 end;
with tex^[224] do
 begin {двойная вверх и влево с кольцом}
 n:=16;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=14;
 p[1,4]:=14;p[2,4]:=14;
 p[1,5]:=14;p[2,5]:=26;
 p[1,6]:=26;p[2,6]:=26;
 p[1,7]:=26;p[2,7]:=8;
 p[1,8]:=32;p[2,8]:=8;
 p[1,9]:=32;p[2,9]:=32;
 p[1,10]:=8;p[2,10]:=32;
 p[1,11]:=8;p[2,11]:=26;
 p[1,12]:=0;p[2,12]:=26;
 p[1,13]:=0;p[2,13]:=14;
 p[1,14]:=8;p[2,14]:=14;
 p[1,15]:=8;p[2,15]:=8;
 p[1,16]:=14;p[2,16]:=8;
 end;
with tex^[225] do
 begin {тройная вверх с кольцом}
 n:=20;
 p[1,1]:=14;p[2,1]:=0;
 p[1,2]:=26;p[2,2]:=0;
 p[1,3]:=26;p[2,3]:=8;
 p[1,4]:=32;p[2,4]:=8;
 p[1,5]:=32;p[2,5]:=14;
 p[1,6]:=40;p[2,6]:=14;
 p[1,7]:=40;p[2,7]:=26;
 p[1,8]:=26;p[2,8]:=26;
 p[1,9]:=26;p[2,9]:=14;
 p[1,10]:=14;p[2,10]:=14;
 p[1,11]:=14;p[2,11]:=26;
 p[1,12]:=32;p[2,12]:=26;
 p[1,13]:=32;p[2,13]:=32;
 p[1,14]:=8;p[2,14]:=32;
 p[1,15]:=8;p[2,15]:=26;
 p[1,16]:=0;p[2,16]:=26;
 p[1,17]:=0;p[2,17]:=14;
 p[1,18]:=8;p[2,18]:=14;
 p[1,19]:=8;p[2,19]:=8;
 p[1,20]:=14;p[2,20]:=8;
 end;
with tex^[232] do
 begin {кружок}
 n:=10;
 p[1,1]:=8;p[2,1]:=8;
 p[1,2]:=32;p[2,2]:=8;
 p[1,3]:=32;p[2,3]:=32;
 p[1,4]:=8;p[2,4]:=32;
 p[1,5]:=8;p[2,5]:=8;
 p[1,6]:=14;p[2,6]:=14;
 p[1,7]:=14;p[2,7]:=26;
 p[1,8]:=26;p[2,8]:=26;
 p[1,9]:=26;p[2,9]:=14;
 p[1,10]:=14;p[2,10]:=14;
 end;
with tex^[233] do
 begin {не трассировать ни где}
 n:=4;
 p[1,1]:=0;p[2,1]:=0;
 p[1,2]:=40;p[2,2]:=0;
 p[1,3]:=40;p[2,3]:=40;
 p[1,4]:=0;p[2,4]:=40
 end;




with tex^[235] do
 begin {точка}
 n:=12;
 p[1,1]:=20;p[2,1]:=11;
 p[1,2]:=24;p[2,2]:=12;
 p[1,3]:=28;p[2,3]:=16;
 p[1,4]:=29;p[2,4]:=20;
 p[1,5]:=28;p[2,5]:=24;
 p[1,6]:=24;p[2,6]:=28;
 p[1,7]:=20;p[2,7]:=29;
 p[1,8]:=16;p[2,8]:=28;
 p[1,9]:=12;p[2,9]:=24;
 p[1,10]:=11;p[2,10]:=20;
 p[1,11]:=12;p[2,11]:=16;
 p[1,12]:=16;p[2,12]:=12;
 end;
with tex^[236] do
 begin {кольцо}
 n:=34;
 p[1,1]:=20;p[2,1]:=2;
 p[1,2]:=20;p[2,2]:=11;
 p[1,3]:=24;p[2,3]:=12;
 p[1,4]:=28;p[2,4]:=16;
 p[1,5]:=29;p[2,5]:=20;
 p[1,6]:=28;p[2,6]:=24;
 p[1,7]:=24;p[2,7]:=28;
 p[1,8]:=20;p[2,8]:=29;
 p[1,9]:=16;p[2,9]:=28;
 p[1,10]:=12;p[2,10]:=24;
 p[1,11]:=11;p[2,11]:=20;
 p[1,12]:=12;p[2,12]:=16;
 p[1,13]:=16;p[2,13]:=12;
 p[1,14]:=20;p[2,14]:=11;
 p[1,15]:=20;p[2,15]:=2;
 p[1,16]:=14;p[2,16]:=3;
 p[1,17]:=10;p[2,17]:=5;
 p[1,18]:=5;p[2,18]:=10;
 p[1,19]:=3;p[2,19]:=14;
 p[1,20]:=2;p[2,20]:=20;
 p[1,21]:=3;p[2,21]:=26;
 p[1,22]:=5;p[2,22]:=30;
 p[1,23]:=10;p[2,23]:=35;
 p[1,24]:=14;p[2,24]:=37;
 p[1,25]:=20;p[2,25]:=38;
 p[1,26]:=26;p[2,26]:=37;
 p[1,27]:=30;p[2,27]:=35;
 p[1,28]:=35;p[2,28]:=30;
 p[1,29]:=37;p[2,29]:=26;
 p[1,30]:=38;p[2,30]:=20;
 p[1,31]:=37;p[2,31]:=14;
 p[1,32]:=35;p[2,32]:=10;
 p[1,33]:=30;p[2,33]:=5;
 p[1,34]:=26;p[2,34]:=3;
 end;
with tex^[237] do
 begin {вверх}
 n:=7;
 p[1,1]:=12;p[2,1]:=0;
 p[1,2]:=28;p[2,2]:=0;
 p[1,3]:=28;p[2,3]:=16;
 p[1,4]:=24;p[2,4]:=12;
 p[1,5]:=20;p[2,5]:=11;
 p[1,6]:=16;p[2,6]:=12;
 p[1,7]:=12;p[2,7]:=16;
 end;
with tex^[238] do
 begin {вправо}
 n:=7;
 p[1,1]:=24;p[2,1]:=12;
 p[1,2]:=40;p[2,2]:=12;
 p[1,3]:=40;p[2,3]:=28;
 p[1,4]:=24;p[2,4]:=28;
 p[1,5]:=28;p[2,5]:=24;
 p[1,6]:=29;p[2,6]:=20;
 p[1,7]:=28;p[2,7]:=16;
 end;
with tex^[239] do
 begin {вниз}
 n:=7;
 p[1,1]:=12;p[2,1]:=24;
 p[1,2]:=16;p[2,2]:=28;
 p[1,3]:=20;p[2,3]:=29;
 p[1,4]:=24;p[2,4]:=28;
 p[1,5]:=28;p[2,5]:=24;
 p[1,6]:=28;p[2,6]:=40;
 p[1,7]:=12;p[2,7]:=40;
 end;
with tex^[240] do
 begin {влево}
 n:=7;
 p[1,1]:=0;p[2,1]:=12;
 p[1,2]:=16;p[2,2]:=12;
 p[1,3]:=12;p[2,3]:=16;
 p[1,4]:=11;p[2,4]:=20;
 p[1,5]:=12;p[2,5]:=24;
 p[1,6]:=16;p[2,6]:=28;
 p[1,7]:=0;p[2,7]:=28;
 end;
with tex^[241] do
 begin {вверх и вправо}
 n:=9;
 p[1,1]:=28;p[2,1]:=0;
 p[1,2]:=40;p[2,2]:=0;
 p[1,3]:=40;p[2,3]:=12;
 p[1,4]:=28;p[2,4]:=24;
 p[1,5]:=29;p[2,5]:=20;
 p[1,6]:=28;p[2,6]:=16;
 p[1,7]:=24;p[2,7]:=12;
 p[1,8]:=20;p[2,8]:=11;
 p[1,9]:=16;p[2,9]:=12;
 end;
with tex^[242] do
 begin {вправо и вниз}
 n:=9;
 p[1,1]:=28;p[2,1]:=16;
 p[1,2]:=40;p[2,2]:=28;
 p[1,3]:=40;p[2,3]:=40;
 p[1,4]:=28;p[2,4]:=40;
 p[1,5]:=16;p[2,5]:=28;
 p[1,6]:=20;p[2,6]:=29;
 p[1,7]:=24;p[2,7]:=28;
 p[1,8]:=28;p[2,8]:=24;
 p[1,9]:=29;p[2,9]:=20;
 end;
with tex^[243] do
 begin {вниз и влево}
 n:=9;
 p[1,1]:=12;p[2,1]:=16;
 p[1,2]:=11;p[2,2]:=20;
 p[1,3]:=12;p[2,3]:=24;
 p[1,4]:=16;p[2,4]:=28;
 p[1,5]:=20;p[2,5]:=29;
 p[1,6]:=24;p[2,6]:=28;
 p[1,7]:=12;p[2,7]:=40;
 p[1,8]:=0;p[2,8]:=40;
 p[1,9]:=0;p[2,9]:=28;
 end;
with tex^[244] do
 begin {влево и вверх}
 n:=9;
 p[1,1]:=0;p[2,1]:=0;
 p[1,2]:=12;p[2,2]:=0;
 p[1,3]:=24;p[2,3]:=12;
 p[1,4]:=20;p[2,4]:=11;
 p[1,5]:=16;p[2,5]:=12;
 p[1,6]:=12;p[2,6]:=16;
 p[1,7]:=11;p[2,7]:=20;
 p[1,8]:=12;p[2,8]:=24;
 p[1,9]:=0;p[2,9]:=12;
 end;
with tex^[245] do
 begin {вверх и вправо уголок}
 n:=3;
 p[1,1]:=28;p[2,1]:=0;
 p[1,2]:=40;p[2,2]:=0;
 p[1,3]:=40;p[2,3]:=12;
 end;
with tex^[246] do
 begin {вправо и вниз уголок}
 n:=3;
 p[1,1]:=40;p[2,1]:=28;
 p[1,2]:=40;p[2,2]:=40;
 p[1,3]:=28;p[2,3]:=40;
 end;
with tex^[247] do
 begin {вниз и влево уголок}
 n:=3;
 p[1,1]:=0;p[2,1]:=28;
 p[1,2]:=12;p[2,2]:=40;
 p[1,3]:=0;p[2,3]:=40;
 end;
with tex^[248] do
 begin {влево и вверх уголок}
 n:=3;
 p[1,1]:=0;p[2,1]:=0;
 p[1,2]:=12;p[2,2]:=0;
 p[1,3]:=0;p[2,3]:=12;
 end;
end;

{---------------------------------------------}

procedure ZAMSTR(x1,y1,x2,y2:longint; sh,st:string; cf,ct,orbuk,f:byte);
var i,lsh,lst:byte;
    lx,ly:word;
begin
 lsh:=length(sh);
 lst:=length(st);
 if (lsh=lst) then f:=f and 15
              else
  begin
  if (f and 8)=8 then
   begin
   setfillstyle(1,cf);
   bar(x1,y1,x2,y2);
   end;
  f:=f and 7;
  end;
 case f of
  0:begin
    lx:=(x2-x1)div lst;
    ly:=(y2-y1);
    for i:=1 to lst do
     POSTTEXT(x1+(i-1)*lx,y1,lx,ly,byte(st[i]),ct,orbuk);
    end;
  1:begin
    lx:=(x2-x1);
    ly:=(y2-y1)div lst;
    for i:=1 to lst do
     POSTTEXT(x1,y1+(i-1)*ly,lx,ly,byte(st[i]),ct,orbuk);
    end;
  2:begin
    lx:=(x2-x1)div lst;
    ly:=(y2-y1);
    for i:=1 to lst do
     POSTTEXT(x1+(lst-i)*lx,y1,lx,ly,byte(st[i]),ct,orbuk);
    end;
  3:begin
    lx:=(x2-x1);
    ly:=(y2-y1)div lst;
    for i:=1 to lst do
     POSTTEXT(x1,y1+(lst-i)*ly,lx,ly,byte(st[i]),ct,orbuk);
    end;
  4:begin
    ly:=y2-y1;
    for i:=1 to lst do
     POSTTEXT(x1+((x2-x1)*(i-1))div lst,y1,
              ((((x2-x1)*i))div lst)-(((x2-x1)*(i-1))div lst),ly,
              byte(st[i]),ct,orbuk);
    end;
  5:begin
    lx:=x2-x1;
    for i:=1 to lst do
     POSTTEXT(x1,y1+((y2-y1)*(i-1))div lst,
              lx,((((y2-y1)*i))div lst)-(((y2-y1)*(i-1))div lst),
              byte(st[i]),ct,orbuk);
    end;
  6:begin
    ly:=y2-y1;
    for i:=1 to lst do
     POSTTEXT(x2-((x2-x1)*i)div lst,y1,
              ((((x2-x1)*i))div lst)-(((x2-x1)*(i-1))div lst),ly,
              byte(st[i]),ct,orbuk);
    end;
  7:begin
    lx:=x2-x1;
    for i:=1 to lst do
     POSTTEXT(x1,y2-((y2-y1)*i)div lst,
              lx,((((y2-y1)*i))div lst)-(((y2-y1)*(i-1))div lst),
              byte(st[i]),ct,orbuk);
    end;
  8:begin
    lx:=(x2-x1)div lst;
    ly:=(y2-y1);
    for i:=1 to lst do
     if st[i]<>sh[i] then
      begin
      POSTTEXT(x1+(i-1)*lx,y1,lx,ly,byte(sh[i]),cf,orbuk);
      POSTTEXT(x1+(i-1)*lx,y1,lx,ly,byte(st[i]),ct,orbuk);
      end;
    end;
  9:begin
    lx:=(x2-x1);
    ly:=(y2-y1)div lst;
    for i:=1 to lst do
     if st[i]<>sh[i] then
      begin
      POSTTEXT(x1,y1+(i-1)*ly,lx,ly,byte(sh[i]),cf,orbuk);
      POSTTEXT(x1,y1+(i-1)*ly,lx,ly,byte(st[i]),ct,orbuk);
      end;
    end;
  10:begin
    lx:=(x2-x1)div lst;
    ly:=(y2-y1);
    for i:=1 to lst do
     if st[i]<>sh[i] then
      begin
      POSTTEXT(x1+(lst-i)*lx,y1,lx,ly,byte(sh[i]),cf,orbuk);
      POSTTEXT(x1+(lst-i)*lx,y1,lx,ly,byte(st[i]),ct,orbuk);
      end;
    end;
  11:begin
    lx:=(x2-x1);
    ly:=(y2-y1)div lst;
    for i:=1 to lst do
     if st[i]<>sh[i] then
      begin
      POSTTEXT(x1,y1+(lst-i)*ly,lx,ly,byte(sh[i]),cf,orbuk);
      POSTTEXT(x1,y1+(lst-i)*ly,lx,ly,byte(st[i]),ct,orbuk);
      end;
    end;
  12:begin
    ly:=y2-y1;
    for i:=1 to lst do
     if st[i]<>sh[i] then
      begin
      POSTTEXT(x1+((x2-x1)*(i-1))div lst,y1,
               ((((x2-x1)*i))div lst)-(((x2-x1)*(i-1))div lst),ly,
               byte(sh[i]),cf,orbuk);
      POSTTEXT(x1+((x2-x1)*(i-1))div lst,y1,
               ((((x2-x1)*i))div lst)-(((x2-x1)*(i-1))div lst),ly,
               byte(st[i]),ct,orbuk);
      end;
    end;
  13:begin
    lx:=x2-x1;
    for i:=1 to lst do
     if st[i]<>sh[i] then
      begin
      POSTTEXT(x1,y1+((y2-y1)*(i-1))div lst,
               lx,((((y2-y1)*i))div lst)-(((y2-y1)*(i-1))div lst),
               byte(sh[i]),cf,orbuk);
      POSTTEXT(x1,y1+((y2-y1)*(i-1))div lst,
               lx,((((y2-y1)*i))div lst)-(((y2-y1)*(i-1))div lst),
               byte(st[i]),ct,orbuk);
      end;
    end;
  14:begin
    ly:=y2-y1;
    for i:=1 to lst do
     if st[i]<>sh[i] then
      begin
      POSTTEXT(x2-((x2-x1)*i)div lst,y1,
               ((((x2-x1)*i))div lst)-(((x2-x1)*(i-1))div lst),ly,
               byte(sh[i]),cf,orbuk);
      POSTTEXT(x2-((x2-x1)*i)div lst,y1,
               ((((x2-x1)*i))div lst)-(((x2-x1)*(i-1))div lst),ly,
               byte(st[i]),ct,orbuk);
      end;
    end;
  15:begin
    lx:=x2-x1;
    for i:=1 to lst do
     if st[i]<>sh[i] then
      begin
      POSTTEXT(x1,y2-((y2-y1)*i)div lst,
               lx,((((y2-y1)*i))div lst)-(((y2-y1)*(i-1))div lst),
               byte(sh[i]),cf,orbuk);
      POSTTEXT(x1,y2-((y2-y1)*i)div lst,
               lx,((((y2-y1)*i))div lst)-(((y2-y1)*(i-1))div lst),
               byte(st[i]),ct,orbuk);
      end;
    end;
  end;
end;

{-----------------------------------------------------------}

procedure setbuk(x1,y1,x2,y2:word; long,plase,color,buk:byte);
 begin
     POSTTEXT(x1+((x2-x1)*(plase-1))div long,y1,
              ((((x2-x1)*plase))div long)-(((x2-x1)*(plase-1))div long),
              y2-y1,buk,color,0);
 end;


 {------------------=====------}


PROCEDURE SETPREM(x1,y1,x2,y2:word; long,plase,color:byte);
 begin
  setfillstyle(1,color);
  bar(x1+(x2-x1)*(plase-1)div long,y1,
     x1+(x2-x1)*plase div long,y2);
 end;

{-----------------------------------------}

PROCEDURE SETKURS(x1,y1,x2,y2:word; long,plase,buk,cb,cf,tip:byte);
 begin
 case tip of
  1:begin
    SETPREM(x1,y1,x2,y2,long,plase,cf);
    setbuk(x1,y1,x2,y2,long,plase,cb,buk);
    end;
  2:begin
    setviewport(x1+(x2-x1)*(plase-1)div long,y2-((y2-y1) div 5),
                x1+(x2-x1)*plase div long,y2,false);
    SETPREM(x1-x1+(x2-x1)*(plase-1)div long,y1-y2-((y2-y1) div 5),
            x2-x1+(x2-x1)*(plase-1)div long,y2-y2-((y2-y1) div 5),
            long,plase,cf);
    setbuk(x1,y1,x2,y2,long,plase,cb,buk);
    setviewport(0,0,gx,gy,false);
    end;
  end;
end;

{-----------------------------------------}

procedure ZAMSTR2(old,new:zamstrtype);
var i,j,n,k:word;
begin ;

end ;


{-----------------------------------------------------------}

Procedure Smenu(var m:menutype);
type type1=record
        x1,y1,x2,y2:word;
        end;
var dd,i,j,x,y,x1,y1,x2,y2:word;
    maski:array[1..30]of type1;

{-------------------------------}
procedure initmaski;
begin
end;
{-------------------------------}
Begin
with m do
 begin
 dd:=1;
 if dd=1 then dd:=2;
 line(0,0,getmaxx,getmaxy);
 end;
end;

{*-------------------------------}

END.{--------======----END----=======----------}
